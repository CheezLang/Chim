use import std.rc
use import std.box
use import std.array
use import std.gap_buffer
use import std.string

#export_scope

BufferLine :: struct {
    characters : GapBuffer[char]
}

Buffer :: struct {
    file    : Option[String]
    lines   : GapBuffer[BufferLine]

}

impl Buffer {
    from_file :: (path: string) -> Result[Rc[Buffer], ()] {
        return Err()
    }

    scratch :: () -> Rc[Buffer] {
        return Rc[Buffer].new(Buffer(
            file    = .None
            lines   = GapBuffer[BufferLine].new(100)
        ))
    }

    save :: (&Self) {

    }

    
}

View :: struct {
    buffer : Rc[Buffer]
}

impl View {
    new :: (buffer: Rc[Buffer]) -> Rc[View] {
        return Rc[View].new(View(buffer))
    }
}

Split :: enum {
    None        : Rc[View]
    Vertical    : Array[Rc[Split]]
    Horizontal  : Array[Rc[Split]]
}

Tab :: struct {
    split : Rc[Split]
}

impl Tab {
    new :: (view: Rc[View]) -> Rc[Tab] {
        return Rc[Tab].new(Tab(
            split = Rc[Split].new(Split.None(view))
        ))
    }

    get_active_view :: (&Self) -> Rc[View] {
        return match self.split.get() {
            .None($view) -> view.clone()
            _ -> @assert(false)
        }
    }
}